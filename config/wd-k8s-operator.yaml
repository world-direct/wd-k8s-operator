apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: wd-k8s-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: loggingsetups.logging.world-direct.at
spec:
  group: logging.world-direct.at
  names:
    kind: LoggingSetup
    listKind: LoggingSetupList
    plural: loggingsetups
    singular: loggingsetup
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LoggingSetup is the Schema for the loggingsetups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LoggingSetupSpec defines the desired state of LoggingSetup
            properties:
              initialUserPassword:
                description: InitialPassword defines the password used to create the
                  Graylog user. It is only set when the user is created, you can change
                  it afterwards in Graylog
                type: string
              isolation:
                description: Isolation allows to choose how the LoggingSetup will
                  be isolated to others. Currently only 'Namespace' is supported
                enum:
                - Namespace
                type: string
            type: object
          status:
            description: LoggingSetupStatus defines the observed state of LoggingSetup
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              graylogInternal:
                description: 'GraylogStatus contains data needed for Reconcilation,
                  specially generated IDs. ATTENTION: These values are not stored
                  anywhere elso, so don''t change them please.'
                properties:
                  indexSetID:
                    description: IndexSetID contains the ID of the IndexSet in Graylog
                    type: string
                  streamID:
                    description: UserID contains the ID of the Stream in Graylog
                    type: string
                  userID:
                    description: UserID contains the ID of the IndexSet in Graylog
                    type: string
                type: object
              userName:
                description: UserName Contains the name of the generated User to logon
                  to graylog
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wd-k8s-operator-controller-manager
  namespace: wd-k8s-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: wd-k8s-operator-leader-election-role
  namespace: wd-k8s-operator-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: wd-k8s-operator-manager-role
rules:
- apiGroups:
  - logging.world-direct.at
  resources:
  - loggingsetups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - logging.world-direct.at
  resources:
  - loggingsetups/finalizers
  verbs:
  - update
- apiGroups:
  - logging.world-direct.at
  resources:
  - loggingsetups/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wd-k8s-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wd-k8s-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wd-k8s-operator-leader-election-rolebinding
  namespace: wd-k8s-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: wd-k8s-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: wd-k8s-operator-controller-manager
  namespace: wd-k8s-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wd-k8s-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wd-k8s-operator-manager-role
subjects:
- kind: ServiceAccount
  name: wd-k8s-operator-controller-manager
  namespace: wd-k8s-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wd-k8s-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wd-k8s-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: wd-k8s-operator-controller-manager
  namespace: wd-k8s-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 35531dea.world-direct.at
kind: ConfigMap
metadata:
  name: wd-k8s-operator-manager-config
  namespace: wd-k8s-operator-system
---
apiVersion: v1
data:
  GRAYLOG_PASSWORD: dG9rZW4=
  GRAYLOG_URL: aHR0cDovLw==
  GRAYLOG_USER: R3JheWxvZyBUb2tlbg==
kind: Secret
metadata:
  name: wd-k8s-operator-graylog-vars
  namespace: wd-k8s-operator-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: wd-k8s-operator-controller-manager-metrics-service
  namespace: wd-k8s-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: wd-k8s-operator-controller-manager
  namespace: wd-k8s-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        envFrom:
        - secretRef:
            name: wd-k8s-operator-graylog-vars
        image: worlddirect/wd-k8s-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
      serviceAccountName: wd-k8s-operator-controller-manager
      terminationGracePeriodSeconds: 10
